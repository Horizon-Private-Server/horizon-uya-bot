[21940, 24093, 2174] 9C 8870887088708870 128
[21940, 24093, 2174] 9CED 8870887088708870 144
possible charge boot flush types

# move left-right camera
[126, 185, 126, 185, 126, 185, 126, 185]
[126, 185, 126, 185, 126, 185, 126, 184]
[126, 183, 126, 181, 126, 179, 126, 178]
[126, 177, 126, 177, 126, 177, 126, 177]
[126, 177, 126, 177, 126, 177, 126, 177]


# looking straight up:
y looking up =77
y looking down = 177

x minimum = 0
x maximum = 254


# good default y camera: 127


import math
import numpy as np

def calculate_angle(source_loc, dest_loc):
    x = math.degrees(math.atan2(dest_loc[0]-source_loc[0],dest_loc[1]-source_loc[1]))
    return x

print(calculate_angle([21,23], [21,25]))
print(calculate_angle([21,23], [24,25]))
print(calculate_angle([21,23], [25,23]))
print(calculate_angle([21,23], [25,20]))
print(calculate_angle([21,23], [21,20]))
print(calculate_angle([21,23], [20.9999999999,-999]))
print(calculate_angle([21,23], [18,23]))
print(calculate_angle([21,23], [18,26]))
